(ns graphgenerator.db
  "
  Contains the initial contents of the database.
  "
  (:require [graphgenerator.generator.config :as config]))


(def programms [
"# Simple undirected graph
graph {
  rankdir=LR

  a[label=\"α\"]
  b[label=\"β\"]
  c[label=\"γ\"]
  d[label=\"δ\"]

  a -- b;
  b -- c;
  b -- b;
  c -- d;
  d -- a;
}
"

"# Simple Finite State Automaton example
digraph {
    rankdir=LR

    a[label=\"Menu\\ndisplayed\", shape=\"doublecircle\"]
    b[label=\"Game\\nrunning\", shape=\"circle\"]
    c[label=\"Rebooting\", shape=\"circle\"]

    a -> b [label=\"Press start\\n& insert coin\"];
    b -> b [label=\"Insert coin\"];
    b -> c [label=\"Press quit\"];
    c -> a [label=\"Reboot done\"];
}

"

"# Namespace deps in the project
# Generated by lein-heira

digraph {
    graph[rankdir=TP, dpi=60]
    node[fontname=\"Monospace\"]
    edge[fontname=\"Monospace\"]

    node1296[label=\"user\", style=solid]
    subgraph cluster1297 {
    graph[label=\"graphgenerator.routes\", fontname=\"Monospace\", rankdir=TP]
    node[fontname=\"Monospace\"]
    edge[fontname=\"Monospace\"]

    node1298[label=\"home\", style=solid]
    node1299[label=\"generator\", style=solid]
}

subgraph cluster1300 {
    graph[label=\"graphgenerator.middleware\", fontname=\"Monospace\", rankdir=TP]
    node[fontname=\"Monospace\"]
    edge[fontname=\"Monospace\"]

    node1301[label=\"formats\", style=solid]
}

subgraph cluster1302 {
    graph[label=\"graphgenerator\", fontname=\"Monospace\", rankdir=TP]
    node[fontname=\"Monospace\"]
    edge[fontname=\"Monospace\"]

    node1303[label=\"validation\", style=solid]
    node1304[label=\"ajax\", style=solid]
    node1305[label=\"core\", style=solid]
    node1306[label=\"dev-middleware\", style=solid]
    node1307[label=\"middleware\", style=solid]
    node1308[label=\"layout\", style=solid]
    node1309[label=\"events\", style=solid]
    node1310[label=\"figwheel\", style=solid]
    node1311[label=\"env\", style=solid]
    node1312[label=\"db\", style=solid]
    node1313[label=\"config\", style=solid]
    node1314[label=\"handler\", style=solid]
    node1315[label=\"nrepl\", style=solid]
}

subgraph cluster1316 {
    graph[label=\"graphgenerator.generator\", fontname=\"Monospace\", rankdir=TP]
    node[fontname=\"Monospace\"]
    edge[fontname=\"Monospace\"]

    node1317[label=\"config\", style=solid]
    node1318[label=\"core\", style=solid]
}

subgraph cluster1319 {
    graph[label=\"graphgenerator.pages\", fontname=\"Monospace\", rankdir=TP]
    node[fontname=\"Monospace\"]
    edge[fontname=\"Monospace\"]

    node1320[label=\"generator\", style=solid]
}

node1298 -> node1307[label=\"\"]
node1298 -> node1308[label=\"\"]
node1296 -> node1305[label=\"\"]
node1296 -> node1310[label=\"\"]
node1296 -> node1313[label=\"\"]
node1299 -> node1317[label=\"\"]
node1299 -> node1307[label=\"\"]
node1299 -> node1318[label=\"\"]
node1305 -> node1313[label=\"\"]
node1305 -> node1314[label=\"\"]
node1305 -> node1315[label=\"\"]
node1307 -> node1301[label=\"\"]
node1307 -> node1308[label=\"\"]
node1307 -> node1311[label=\"\"]
node1318 -> node1317[label=\"\"]
node1311 -> node1306[label=\"\"]
node1312 -> node1317[label=\"\"]
node1314 -> node1298[label=\"\"]
node1314 -> node1299[label=\"\"]
node1314 -> node1307[label=\"\"]
node1314 -> node1308[label=\"\"]
node1314 -> node1311[label=\"\"]
node1320 -> node1309[label=\"\"]
}"


"{
  :a [:b :c]
  :b [:c]
  :c [:a]
}
"

])


(def presets
  {:graphviz [{:id    1
               :label "Undirected graph"
               :text  (nth programms 0)}
              {:id    2
               :label "FSA"
               :text  (nth programms 1)}
              {:id    3
               :label "Clustering"
               :text  (nth programms 2)}]
   :rhizome  [{:id    1
               :label "Simple directed graph"
               :text  (nth programms 3)}]})


(def graphviz-types
  (map
   (fn [[id {:keys [label]}]] {:id id :label label})
   config/graphviz-programs))


(def first-graphviz-type
  (-> graphviz-types first :id))


(def initial-db
  {:generator/graph-types         [{:id    :graphviz
                                    :label "Graphviz"}
                                   {:id    :rhizome
                                    :label "Rhizome"}]
   :generator/selected-graph-type :graphviz

   ;; configured in shared config
   :generator/graphviz-types         graphviz-types
   :generator/selected-graphviz-type first-graphviz-type

   :generator/presets         presets
   :generator/selected-preset [first-graphviz-type 0]

   :generator/input        ""
   :generator/in-progress? false})



